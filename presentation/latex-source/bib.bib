% Encoding: UTF-8

@Misc{AndroidNdkIntro,
  author       = {Google},
  title        = {Android NDK Intro},
  howpublished = {\url{https://developer.android.com/ndk/guides/index.html}},
  year         = {2017},
  note         = {Last accessed on 11/10/2017},
  timestamp    = {2017-11-10},
  url          = {https://developer.android.com/ndk/guides/index.html},
}

@InProceedings{Pearce:2012:APS:2414456.2414498,
  author    = {Pearce, Paul and Felt, Adrienne Porter and Nunez, Gabriel and Wagner, David},
  title     = {AdDroid: Privilege Separation for Applications and Advertisers in Android},
  booktitle = {Proceedings of the 7th ACM Symposium on Information, Computer and Communications Security},
  year      = {2012},
  series    = {ASIACCS '12},
  pages     = {71--72},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2414498},
  doi       = {10.1145/2414456.2414498},
  isbn      = {978-1-4503-1648-4},
  location  = {Seoul, Korea},
  numpages  = {2},
  url       = {http://doi.acm.org/10.1145/2414456.2414498},
}

@Misc{JNISpecChapter1,
  author       = {Oracle},
  title        = {JNI Specification Chapter 1},
  howpublished = {\url{https://docs.oracle.com/javase/8/docs/technotes/guides/jni/spec/intro.html}},
  year         = {2017},
  note         = {Last accessed on 11/13/2017},
  timestamp    = {2017-11-13},
  url          = {https://docs.oracle.com/javase/8/docs/technotes/guides/jni/spec/intro.html},
}

@Book{FYM.ESORICS2012,
  title     = {Computer Security - ESORICS 2012},
  publisher = {Lecture Notes of Computer Science 7459, Springer},
  year      = {2012},
  editor    = {S. Foresti and M. Yung and F. Martinelli},
  volume    = {7459},
  series    = {Lecture Notes of Computer Science},
  booktitle = {Computer Security - ESORICS 2012},
}

@InProceedings{Afonso2016GoingNU,
  author    = {Vitor Monte Afonso and Paulo L\'icio de Geus and Antonio Bianchi and Yanick Fratantonio and Christopher Kr\"ugel and Giovanni Vigna and Adam Doup\'e and Mario Polino},
  title     = {Going Native: Using a Large-Scale Analysis of Android Apps to Create a Practical Native-Code Sandboxing Policy},
  booktitle = {NDSS},
  year      = {2016},
}

@Article{Chisnall:2017:CJS:3093337.3037725,
  author     = {Chisnall, David and Davis, Brooks and Gudka, Khilan and Brazdil, David and Joannou, Alexandre and Woodruff, Jonathan and Markettos, A. Theodore and Maste, J. Edward and Norton, Robert and Son, Stacey and Roe, Michael and Moore, Simon W. and Neumann, Peter G. and Laurie, Ben and Watson, Robert N.M.},
  title      = {CHERI JNI: Sinking the Java Security Model into the C},
  journal    = {SIGARCH Comput. Archit. News},
  year       = {2017},
  volume     = {45},
  number     = {1},
  pages      = {569--583},
  month      = apr,
  issn       = {0163-5964},
  acmid      = {3037725},
  address    = {New York, NY, USA},
  doi        = {10.1145/3093337.3037725},
  issue_date = {March 2017},
  keywords   = {architecture, capability systems, cheri, compartmentalization, compilers, hardware security, java, jni, language security, memory protection, sandboxing},
  numpages   = {15},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/3093337.3037725},
}

@Misc{JNISpecChapter2,
  author       = {Oracle},
  title        = {JNI Spec Chapter 2: Design Overview},
  howpublished = {\url{https://docs.oracle.com/javase/8/docs/technotes/guides/jni/spec/design.html}},
  year         = {2017},
  note         = {Last accessed on 11/13/2017},
  timestamp    = {2017-12-03},
  url          = {https://docs.oracle.com/javase/8/docs/technotes/guides/jni/spec/intro.html},
}

@InProceedings{Sun:2014:NPA:2627393.2627396,
  author    = {Sun, Mengtao and Tan, Gang},
  title     = {NativeGuard: Protecting Android Applications from Third-party Native Libraries},
  booktitle = {Proceedings of the 2014 ACM Conference on Security and Privacy in Wireless \& Mobile Networks},
  year      = {2014},
  series    = {WiSec '14},
  pages     = {165--176},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2627396},
  doi       = {10.1145/2627393.2627396},
  isbn      = {978-1-4503-2972-9},
  keywords  = {android, java native interface, privilege isolation},
  location  = {Oxford, United Kingdom},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2627393.2627396},
}

@Unknown{ExecuteThis,
  author = {Poeplau, Sebastian and Fratantonio, Yanick and Bianchi, Antonio and Kruegel, Christopher and Vigna, Giovanni},
  title  = {Execute This! Analyzing Unsafe and Malicious Dynamic Code Loading in Android Applications},
  month  = {01},
  year   = {2014},
  isbn   = {1-891562-35-5},
}

@InBook{Sun_jvm-portablesandboxing,
  pages     = {842--858},
  title     = {JVM-Portable Sandboxing of Java's Native Libraries},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Sun, Mengtao and Tan, Gang},
  editor    = {Foresti, Sara and Yung, Moti and Martinelli, Fabio},
  address   = {Berlin, Heidelberg},
  isbn      = {978-3-642-33167-1},
  abstract  = {Although Java provides strong support for safety and security, native libraries used in a Java application can open security holes. Previous work, Robusta, puts native libraries in a sandbox to protect the integrity and security of Java. However, Robusta's implementation modifies the internals of OpenJDK, a particular implementation of a Java Virtual Machine (JVM). As such, it is not portable to other JVM implementations. This paper shows how to make the idea of sandboxing native libraries JVM-portable. We present a two-layer approach for sandboxing without modifying the internals of a JVM. We also discuss our experience of sandboxing Java's core native libraries. Experiments show that our approach of JVM-portable sandboxing incurs modest performance overhead on SPECjvm 2008 benchmark programs.},
  booktitle = {Computer Security -- ESORICS 2012: 17th European Symposium on Research in Computer Security, Pisa, Italy, September 10-12, 2012. Proceedings},
  doi       = {10.1007/978-3-642-33167-1_48},
  url       = {https://doi.org/10.1007/978-3-642-33167-1_48},
}

@InProceedings{Szekeres:2013:SEW:2497621.2498101,
  author    = {Szekeres, Laszlo and Payer, Mathias and Wei, Tao and Song, Dawn},
  title     = {SoK: Eternal War in Memory},
  booktitle = {Proceedings of the 2013 IEEE Symposium on Security and Privacy},
  year      = {2013},
  series    = {SP '13},
  pages     = {48--62},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2498101},
  doi       = {10.1109/SP.2013.13},
  isbn      = {978-0-7695-4977-4},
  numpages  = {15},
  url       = {http://dx.doi.org/10.1109/SP.2013.13},
}

@InProceedings{Siefers:2010:RTN:1866307.1866331,
  author    = {Siefers, Joseph and Tan, Gang and Morrisett, Greg},
  title     = {Robusta: Taming the Native Beast of the JVM},
  booktitle = {Proceedings of the 17th ACM Conference on Computer and Communications Security},
  year      = {2010},
  series    = {CCS '10},
  pages     = {201--211},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {1866331},
  doi       = {10.1145/1866307.1866331},
  isbn      = {978-1-4503-0245-6},
  keywords  = {JNI, JVM, SFI, sandboxing},
  location  = {Chicago, Illinois, USA},
  numpages  = {11},
  url       = {http://doi.acm.org/10.1145/1866307.1866331},
}

@InProceedings{5669738,
  author    = {S. Lee and J. W. Jeon},
  title     = {Evaluating performance of Android platform using native C for embedded systems},
  booktitle = {ICCAS 2010},
  year      = {2010},
  pages     = {1160-1163},
  month     = {Oct},
  doi       = {10.1109/ICCAS.2010.5669738},
  keywords  = {C language;Java;embedded systems;mobile computing;Android NDK;Android SDK;Android platform;C language;JNI communication delay;Java language;embedded systems;floating-point calculation;heap memory allocation algorithm;integer calculation;memory access algorithm;mobile devices;Androids;Embedded systems;Java;Libraries;Performance evaluation;Resource management;Virtual machining;Android;JNI;Native C;Performance evaluation;Smart phone},
}

@InProceedings{Wang:2017:ESM:3038912.3052712,
  author    = {Wang, Haoyu and Liu, Zhe and Guo, Yao and Chen, Xiangqun and Zhang, Miao and Xu, Guoai and Hong, Jason},
  title     = {An Explorative Study of the Mobile App Ecosystem from App Developers' Perspective},
  booktitle = {Proceedings of the 26th International Conference on World Wide Web},
  year      = {2017},
  series    = {WWW '17},
  pages     = {163--172},
  address   = {Republic and Canton of Geneva, Switzerland},
  publisher = {International World Wide Web Conferences Steering Committee},
  acmid     = {3052712},
  doi       = {10.1145/3038912.3052712},
  isbn      = {978-1-4503-4913-0},
  keywords  = {android, app clone, app developers, app ecosystem, google play, mobile apps, mobile privacy},
  location  = {Perth, Australia},
  numpages  = {10},
  url       = {https://doi.org/10.1145/3038912.3052712},
}

@InProceedings{detours-binary-interception-of-win32-functions,
  author    = {Hunt, Galen and Brubacher, Doug},
  title     = {Detours: Binary Interception of Win32 Functions},
  booktitle = {Third USENIX Windows NT Symposium},
  year      = {1999},
  pages     = {8},
  month     = {July},
  publisher = {USENIX},
  abstract  = {Innovative systems research hinges on the ability to easily instrument and extend existing operating system and application functionality. With access to appropriate source code, it is often trivial to insert new instrumentation or extensions by rebuilding the OS or application. However, in today's world of commercial software, researchers seldom have access to all relevant source code. We present Detours, a library for instrumenting arbitrary Win32 functions on x86 machines. Detours intercepts Win32 functions by re-writing target function images. The Detours package also contains utilities to attach arbitrary DLLs and data segments (called payloads) to any Win32 binary. While prior researchers have used binary rewriting to insert debugging and profiling instrumentation, to our knowledge, Detours is the first package on any platform to logically preserve the un-instrumented target function (callable through a trampoline) as a subroutine for use by the instrumentation. Our unique trampoline design is crucial for extending existing binary software. We describe our experiences using Detours to create an automatic distributed partitioning system, to instrument and analyze the DCOM protocol stack, and to create a thunking layer for a COM-based OS API. Micro-benchmarks demonstrate the efficiency of the Detours library.},
  url       = {https://www.microsoft.com/en-us/research/publication/detours-binary-interception-of-win32-functions/},
}

@Misc{ArtAndDalvik,
  author       = {Google},
  title        = {ART and Dalvik},
  howpublished = {\url{https://source.android.com/devices/tech/dalvik/}},
  year         = {2017},
  note         = {Last accessed on 12/08/2017},
  timestamp    = {2017-08-12},
  url          = {https://source.android.com/devices/tech/dalvik/},
}

@Misc{DirtyCow,
  author       = {Phil Oester},
  title        = {CVE-2016-5195},
  howpublished = {\url{https://access.redhat.com/security/cve/CVE-2016-5195}},
  year         = {2016},
  note         = {Last accessed on 01/17/2018},
  timestamp    = {2018-01-17},
  url          = {https://access.redhat.com/security/cve/CVE-2016-5195},
}

@Misc{JitWorkFlow,
  author       = {Google},
  title        = {Implementing ART Just-In-Time (JIT) Compiler},
  howpublished = {\url{https://source.android.com/devices/tech/dalvik/jit-compiler}},
  year         = {2017},
  note         = {Last accessed on 01/18/2018},
  timestamp    = {2018-18-01},
  url          = {https://source.android.com/devices/tech/dalvik/jit-compiler},
}

@Misc{ArtMethodOreoRev36,
  author       = {Google},
  title        = {ArtMethod from Goolge Source},
  howpublished = {\url{https://android.googlesource.com/platform/art/+/android-8.0.0_r36/runtime/art_method.h}},
  year         = {2018},
  note         = {Last accessed on 01/18/2018},
  timestamp    = {2018-18-01},
  url          = {https://android.googlesource.com/platform/art/+/android-8.0.0_r36/runtime/art_method.h},
}

@Comment{jabref-meta: databaseType:bibtex;}
